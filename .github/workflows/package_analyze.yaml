name: "Analyze the package"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Validate semantic changelog update
        if: ${{ github.event_name == 'pull_request' }}
        uses: GetStream/verify-semantic-changelog-update@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Stable Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: "stable"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: dart pub get

      - name: Run dependency validator
        run: |
          dart pub global activate dependency_validator
          dart pub global run dependency_validator:dependency_validator

      - name: Analyze project
        run: dart analyze --fatal-warnings --fatal-infos .

      - name: Analyze by Dart Code Metrics
        uses: dart-code-checker/dart-code-metrics-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          folders: "lib, test"

      - name: Verify formatting
        run: dart format --set-exit-if-changed .

      - name: Compute the package score on pub.dev site
        uses: axel-op/dart-package-analyzer@v3
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

  testing:
    needs: analysis
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Install Stable Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: "stable"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: dart pub get

      - name: Run tests
        env:
          CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
        if: success()
        run: |
          dart test --coverage=coverage
          dart run coverage:format_coverage --packages=.packages -i coverage -o coverage/coverage.lcov --lcov --report-on=lib
          dart run tool/uncovered_coverage.dart
          dart test test/fake_test.dart --coverage=coverage
          dart run coverage:format_coverage --packages=.packages -i coverage -o coverage/coverage.lcov --lcov --report-on=lib
          bash <(curl -s https://codecov.io/bash) -f coverage/coverage.lcov

  check-minimal-supported-dart-compatibility:
    needs: analysis
    runs-on: ubuntu-latest

    steps:
      - name: Install Dart 2.12.0
        uses: dart-lang/setup-dart@v1
        with:
          sdk: "2.12.0"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: dart pub downgrade

      - name: Disable unsupported rules
        run: |
          sed -i'.original' 's/- avoid_multiple_declarations_per_line/#    - avoid_multiple_declarations_per_line/g' analysis_options.yaml
          sed -i'.original' 's/- depend_on_referenced_packages/#    - depend_on_referenced_packages/g' analysis_options.yaml
          sed -i'.original' 's/- deprecated_consistency/#    - deprecated_consistency/g' analysis_options.yaml
          sed -i'.original' 's/- eol_at_end_of_file/#    - eol_at_end_of_file/g' analysis_options.yaml
          sed -i'.original' 's/- library_private_types_in_public_api/#    - library_private_types_in_public_api/g' analysis_options.yaml
          sed -i'.original' 's/- noop_primitive_operations/#    - noop_primitive_operations/g' analysis_options.yaml
          sed -i'.original' 's/- prefer_null_aware_method_calls/#    - prefer_null_aware_method_calls/g' analysis_options.yaml
          sed -i'.original' 's/- unnecessary_constructor_name/#    - unnecessary_constructor_name/g' analysis_options.yaml
          sed -i'.original' 's/- use_build_context_synchronously/#    - use_build_context_synchronously/g' analysis_options.yaml
          sed -i'.original' 's/- use_if_null_to_convert_nulls_to_bools/#    - use_if_null_to_convert_nulls_to_bools/g' analysis_options.yaml
          sed -i'.original' 's/- use_named_constants/#    - use_named_constants/g' analysis_options.yaml
          sed -i'.original' 's/- use_test_throws_matchers/#    - use_test_throws_matchers/g' analysis_options.yaml

      - name: Check compatibility
        run: |
          dart analyze --fatal-warnings --fatal-infos .
          dart test

  check-beta-dart-compatibility:
    needs: analysis
    runs-on: ubuntu-latest

    steps:
      - name: Install Dart beta
        uses: dart-lang/setup-dart@v1
        with:
          sdk: "beta"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: dart pub upgrade

      - name: Check compatibility
        run: |
          dart analyze --fatal-warnings --fatal-infos .
          dart test
